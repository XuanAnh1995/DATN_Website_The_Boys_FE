import axios from "axios";

const API_URL_CHECKOUT = "http://localhost:8080/api/sale-pos";

const API_URL_PRODUCT_DETAIL = "http://localhost:8080/api/product-details";

const API_URL_CUSTOMERS = "http://localhost:8080/api/customers";

const API_URL_VOUCHERS = "http://localhost:8080/api/vouchers";

const API_URL_ORDERS = "http://localhost:8080/api/orders";

const SalePOS = {

    // üõí L·∫•y danh s√°ch chi ti·∫øt s·∫£n ph·∫©m theo b·ªô l·ªçc
    getProductDetails: async (filters) => {
        console.log("üìå L·∫•y danh s√°ch s·∫£n ph·∫©m v·ªõi b·ªô l·ªçc:", filters);
        try {
            const response = await axios.get(API_URL_PRODUCT_DETAIL, { params: filters });
            console.log("‚úÖ Danh s√°ch s·∫£n ph·∫©m:", response.data.data);
            return response.data.data;
        } catch (error) {
            console.error("‚ùå L·ªói khi l·∫•y s·∫£n ph·∫©m:", error.response?.data || error.message);
            throw error;
        }
    },

    // üßë‚Äçüíº Th√™m kh√°ch h√†ng m·ªõi
    createCustomer: async (customerData) => {
        console.log("üìå G·ªçi API t·∫°o kh√°ch h√†ng:", customerData);
        try {
            const response = await axios.post(API_URL_CUSTOMERS, customerData);
            console.log("‚úÖ Kh√°ch h√†ng t·∫°o th√†nh c√¥ng:", response.data);
            return response.data;
        } catch (error) {
            console.error("‚ùå L·ªói khi th√™m kh√°ch h√†ng:", error.response?.data || error.message);
            return null; // Tr·∫£ v·ªÅ null ƒë·ªÉ x·ª≠ l√Ω l·ªói ·ªü UI
        }
    },


    // üßë‚Äçüíº L·∫•y danh s√°ch kh√°ch h√†ng theo b·ªô l·ªçc
    getCustomers: async (filters) => {
        console.log("üìå L·∫•y danh s√°ch kh√°ch h√†ng v·ªõi b·ªô l·ªçc:", filters);
        try {
            const response = await axios.get(API_URL_CUSTOMERS, { params: filters });
            console.log("‚úÖ D·ªØ li·ªáu kh√°ch h√†ng:", response.data.data);
            return response.data.data;
        } catch (error) {
            console.error("‚ùå L·ªói khi l·∫•y kh√°ch h√†ng:", error.response?.data || error.message);
            throw error;
        }
    },

    // üí≥ Thanh to√°n ƒë∆°n h√†ng
    checkout: async (orderData) => {
        console.log("üìå G·ª≠i y√™u c·∫ßu thanh to√°n:", orderData);
        try {
            const response = await axios.post(API_URL_CHECKOUT, orderData);
            console.log("‚úÖ Thanh to√°n th√†nh c√¥ng:", response.data);
            return response.data;
        } catch (error) {
            console.error("‚ùå L·ªói khi thanh to√°n:", error.response?.data || error.message);
            throw error;
        }
    },


    // üì¶ T·∫°o ƒë∆°n h√†ng m·ªõi
    createOrder: async (orderData) => {
        console.log("üìå T·∫°o ƒë∆°n h√†ng:", orderData);
        try {
            const response = await axios.post(API_URL_ORDERS, orderData);
            console.log("‚úÖ ƒê∆°n h√†ng t·∫°o th√†nh c√¥ng:", response.data);
            return response.data;
        } catch (error) {
            console.error("‚ùå L·ªói khi t·∫°o ƒë∆°n h√†ng:", error.response?.data || error.message);
            throw error;
        }
    },

    // üõçÔ∏è Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
    addProductToCart: async (orderId, productData) => {
        console.log(`üìå Th√™m s·∫£n ph·∫©m v√†o ƒë∆°n h√†ng ${orderId}:`, productData);
        try {
            const response = await axios.post(`${API_URL_ORDERS}/${orderId}/products`, productData);
            console.log("‚úÖ S·∫£n ph·∫©m ƒë√£ th√™m v√†o gi·ªè h√†ng:", response.data);
            return response.data;
        } catch (error) {
            console.error("‚ùå L·ªói khi th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng:", error.response?.data || error.message);
            throw error;
        }
    },

    // üí∞ Ho√†n t·∫•t thanh to√°n cho ƒë∆°n h√†ng
    completePayment: async (orderId) => {
        console.log(`üìå Ho√†n t·∫•t thanh to√°n cho ƒë∆°n h√†ng #${orderId}`);
        try {
            const response = await axios.put(`${API_URL_ORDERS}/${orderId}/payment`);
            console.log("‚úÖ Thanh to√°n ho√†n t·∫•t:", response.data);
            return response.data;
        } catch (error) {
            console.error("‚ùå L·ªói khi ho√†n t·∫•t thanh to√°n:", error.response?.data || error.message);
            throw error;
        }
    },
    

    // üéüÔ∏è L·∫•y danh s√°ch voucher h·ª£p l·ªá t·∫°i th·ªùi ƒëi·ªÉm hi·ªán t·∫°i
    getVouchers: async () => {
        console.log("üìå L·∫•y danh s√°ch voucher h·ª£p l·ªá");
        try {
            const response = await axios.get(`${API_URL_VOUCHERS}`);
            console.log("‚úÖ Danh s√°ch voucher h·ª£p l·ªá:", response.data.data);
            return response.data.data;
        } catch (error) {
            console.error("‚ùå L·ªói khi l·∫•y danh s√°ch voucher:", error.response?.data || error.message);
            throw error;
        }
    }

};

export default SalePOS;
